/* 

	Created by Steve Merschel 2022.

	Version: 1.0.0

	Copyright Â© 2022 PREVENTICUS GmbH

	Redistribution and use in source and binary forms, with or without modification,
	are permitted provided that the following conditions are met:

	1. Redistributions of source code must retain the above copyright notice,
	this list of conditions and the following disclaimer.

	2. Redistributions in binary form must reproduce the above copyright notice,
	this list of conditions and the following disclaimer in the documentation 
	and/or other materials provided with the distribution.

	3. Neither the name of the copyright holder nor the names of its contributors
	may be used to endorse or promote products derived from this software without
	specific prior written permission.

	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND 
	ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED 
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
	IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
	LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
	OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
	OF THE POSSIBILITY OF SUCH DAMAGE.

*/

syntax = "proto3";

package com.preventicus.pcore;

import "pcore_color.proto";
import "pcore_coordinate.proto";
import "pcore_norm.proto";
import "pcore_sensor_type.proto";

message Raw { // Raw collects all raw sensor signals 

	message Sensor {

		message DifferentialTimestampsContainer {
			uint64 first_unix_timestamp_ms            = 1;
			repeated uint32 blocks_differences_ms     = 2;
			repeated uint32 timestamps_differences_ms = 3;
		}

		message Channel {

			message PpgMetadata {

				oneof Light {
					uint32 wavelength_nm              = 1;
					com.preventicus.pcore.Color color = 2;
				}
	
			}
	
			message AccMetadata {

				oneof Type {
					com.preventicus.pcore.Coordinate coordinate = 1; 
					com.preventicus.pcore.Norm norm             = 2;
				}

			}
		
			message DifferentialBlock {		
				repeated sint32 differential_values = 1;
			}

			oneof Metadata {
				PpgMetadata ppg_metadata = 1;
				AccMetadata acc_metadata = 2;
			}
			
			repeated DifferentialBlock differential_blocks = 3;

		}

		repeated Channel channels                                         = 1;
		DifferentialTimestampsContainer differential_timestamps_container = 2;
		com.preventicus.pcore.SensorType sensor_type                      = 3;
		
	}

	repeated Sensor sensors = 1;

}